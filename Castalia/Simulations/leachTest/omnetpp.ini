# ********************************************************************************
# *  Copyright (c) Federal University of Para, brazil - 2011                     *
# *  Developed at the Research Group on Computer Network and Multimedia          *
# *  Communication (GERCOM)                                                      *
# *  All rights reserved						         *
# *  								                 *
# *  Permission to use, copy, modify, and distribute this protocol and its       *             
# *  documentation for any purpose, without fee, and without written             *
# *  agreement is hereby granted, provided that the above copyright notice,      *
# *  and the author appear in all copies of this protocol.                       * 
# *  							                         * 
# *  Module:   LEACH Clustering Protocol for Castalia Simulator                  * 
# *  Version:  0.2                                                               * 
# *  Author(s): Adonias Pires <adonias@ufpa.br>                                  * 
# *             Claudio Silva <claudio.silva@itec.ufpa.br>                       *
# *******************************************************************************/

[General]

#########################
## Network          #####
########################
include ../Parameters/Castalia.ini
include ../Parameters/MAC/CSMA.ini
sim-time-limit = 20000s
seed-set = ${repetition}

SN.field_x = 70						#40
SN.field_y = 70						#10
SN.numNodes = 11
#SN.deployment = "[1..100]->uniform"
#SN.deployment = "[1..100]->10x10"
#SN.node[0].xCoor = 33	# Para que no se solape con el del centro
#SN.node[0].yCoor = 33

#########################
## Traces           #####
########################
SN.wirelessChannel.collectTraceInfo = false
SN.node[*].Communication.Radio.collectTraceInfo = false
#SN.node[*].Communication.Radio.collectTraceInfoAlbarc = true
#SN.node[43].Communication.Radio.collectTraceInfoAlbarc = true
#SN.node[17].Communication.Radio.collectTraceInfoAlbarc = true
SN.node[*].Communication.MAC.collectTraceInfo = true
#SN.node[43].Communication.MAC.collectTraceInfo = true
#SN.node[*].Communication.Routing.collectTraceInfo = true
#SN.node[1].Communication.Routing.collectTraceInfo = true
#SN.node[*].Communication.Routing.collectTraceInfoAlbarc = true
SN.node[*].Communication.Routing.collectTraceInfo = true
SN.node[0].Application.collectTraceInfo = true
SN.node[*].SensorManager.collectTraceInfo = false
SN.node[*].ResourceManager.collectTraceInfo = false

#########################
## MAC              #####
########################
# XXX-albarc PRUEBA comprobar efecto de diferentes MAC (lo que se pone aquí prevalece sobre lo que hay en CSMA.ini)
#SN.node[*].Communication.MACProtocolName = "TunableMAC"
SN.node[*].Communication.MACProtocolName = "BypassMAC"
SN.node[*].Communication.MAC.macBufferSize = 10000
SN.node[*].Communication.MAC.dutyCycle = 1.0	# Para TunableMAC, valor entre 0 y 1 (0 y 1 tienen el mismo efecto: no sleep)

#-----CSMA-CA-----#

#########################
## Routing         #####
########################	
SN.node[*].Communication.RoutingProtocolName = "LeachRouting"
SN.node[*].Communication.Routing.netBufferSize = 1000
SN.node[0].Communication.Routing.isSink = true
SN.node[*].Communication.Routing.slotLength = 0.2
SN.node[*].Communication.Routing.roundLength = 20s
SN.node[*].Communication.Routing.percentage = 0.05
SN.node[*].Communication.Routing.powersConfig = xmldoc("powersConfig.xml")
SN.node[*].Communication.Routing.numTimeBuckets = 20

# Delay Between Packets para evitar colisiones
#SN.node[43].Communication.Routing.delayBetweenPacketsEnabled = false
#SN.node[43].Communication.Routing.delayBetweenPackets = 0.008

# Priority Level en el paquete de JOIN
#SN.node[43].Communication.Routing.myPriorityLevel = 1
#SN.node[35].Communication.Routing.myPriorityLevel = 2

# Hay que rellenar estos strings para los collectOutput, ya que el sink no tiene la información del priority level en los paquetes de JOIN
#SN.node[*].Communication.Routing.priorityLevel_1_Sources = "43"
#SN.node[*].Communication.Routing.priorityLevel_2_Sources = "35"
#SN.node[*].Communication.Routing.slotsIncreasePercentagePriorityLevel_1 = 0
#SN.node[*].Communication.Routing.slotsIncreasePercentagePriorityLevel_2 = 0.3

# XXX-albarc Priorizar determinadas fuentes dándoles más slots en el TDMA - obsoleto, se hace con el campo de JOIN
#SN.node[*].Communication.Routing.prioritySources = "43"
#SN.node[*].Communication.Routing.extraSlots = "5"

#########################
## Application      #####
########################
SN.node[*].ApplicationName = "LeachTest"
#SN.node[*].Application.packet_rate = 10
#SN.node[..42].Application.packet_rate = 1
#SN.node[43].Application.packet_rate = 1
#SN.node[44..].Application.packet_rate = 1
SN.node[*].Application.constantDataPayload = 11 # Tiene que ser menor que 1024 que es el máximo en la capa física (maxPhyFrameSize)

SN.node[*].Application.latencyHistogramMax = 10000
SN.node[*].Application.latencyHistogramBuckets = 10


#########################
## Wireless Channel #####
########################
SN.wirelessChannel.onlyStaticNodes = true
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.pathLossExponent = 2.0	# Free Space 

#########################
## Radio           #####
########################
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"

#########################
## Resource Manager #####
########################
#SN.node[*].ResourceManager.initialEnergy = 2


###########################
## Otras configuraciones ##
###########################
[Config varyDutyCycle]
SN.node[*].Communication.MAC.dutyCycle = ${dutyCycle= 0.2, 0.4, 0.6, 0.8, 1.0}

[Config varyPacketRate]
SN.node[43].Application.packet_rate = ${packetRate=0.1, 0.5, 1, 5, 10}

[Config packetRate10]
SN.node[43].Application.packet_rate = 10
SN.node[*].Communication.Routing.delayBetweenPackets = 0.008

[Config packetRate100]
SN.node[43].Application.packet_rate = 100
SN.node[43].Communication.Routing.delayBetweenPackets = 0.001

[Config fixedLocation]
SN.deployment = "[1..100]->10x10"
SN.node[0].xCoor = 33	# Para que no se solape con el del centro
SN.node[0].yCoor = 33

[Config randomLocation]
SN.deployment = "[1..100]->uniform"
SN.node[0].xCoor = 35	# Para que no se solape con el del centro
SN.node[0].yCoor = 35

[Config varyDBP]
#SN.node[43].Communication.Routing.delayBetweenPackets = ${DBP=0.0001, 0.0005, 0.001, 0.0015, 0.002, 0.0025, 0.005}
SN.node[43].Communication.Routing.delayBetweenPackets = ${DBP=0.006, 0.007, 0.008, 0.009, 0.01}

[Config varyExtraSlots]
#SN.node[*].Communication.Routing.extraSlots = ${ES="8","10","12","14","16","18"}
SN.node[*].Communication.Routing.extraSlots = ${ES="20","30"}

[Config varyExtraSlotsPercentage]
SN.node[*].Communication.Routing.slotsIncreasePercentagePriorityLevel_1 = ${ESP=0, 0.2, 0.4, 0.6, 0.8, 1, 1.5, 2, 4, 10, 20}

[Config DBP_enabled_all]
SN.node[..42].Communication.Routing.delayBetweenPacketsEnabled = true
SN.node[44..].Communication.Routing.delayBetweenPacketsEnabled = true
SN.node[43].Communication.Routing.delayBetweenPacketsEnabled = true
SN.node[*].Communication.Routing.delayBetweenPackets = 0.008
#SN.node[..42].Communication.Routing.delayBetweenPackets = 0.008
#SN.node[44..].Communication.Routing.delayBetweenPackets = 0.008
#SN.node[43].Communication.Routing.delayBetweenPackets = 0.008

[Config DBP_enabled_onlyPriority]
SN.node[..42].Communication.Routing.delayBetweenPacketsEnabled = false
SN.node[44..].Communication.Routing.delayBetweenPacketsEnabled = false
SN.node[43].Communication.Routing.delayBetweenPacketsEnabled = true
SN.node[*].Communication.Routing.delayBetweenPackets = 0.008

# CONFIGURACIONES PAPER LEACH-APP #
[Config varySlotLength_LA]
#SN.node[*].Communication.Routing.slotLength = ${slotLength=0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1}
SN.node[*].Communication.Routing.slotLength = ${slotLength=0.1, 0.2, 0.3, 0.4, 0.5}

[Config varyPacketRate_LA]
SN.node[..42].Application.packet_rate = 10
#SN.node[43].Application.packet_rate = ${packetRate=80, 100}
SN.node[43].Application.packet_rate = ${packetRate=80, 100}
SN.node[44..].Application.packet_rate = 10

[Config DBPdisabled_LA]
SN.node[*].Communication.Routing.delayBetweenPacketsEnabled = false

[Config DBPenabled_LA]
SN.node[*].Communication.Routing.delayBetweenPacketsEnabled = true
SN.node[*].Communication.Routing.delayBetweenPackets = 0.05

[Config DBPenabledOnlyPrior_LA]
SN.node[43].Communication.Routing.delayBetweenPacketsEnabled = true
SN.node[43].Communication.Routing.delayBetweenPackets = 0.05

[Config packetRate10_LA]
SN.node[..42].Application.packet_rate = 10
SN.node[43].Application.packet_rate = 10
SN.node[44..].Application.packet_rate = 10

[Config packetRate80_LA]
SN.node[..42].Application.packet_rate = 10
SN.node[43].Application.packet_rate = 80
SN.node[44..].Application.packet_rate = 10

[Config priorityLevel1_LA]
SN.node[43].Communication.Routing.myPriorityLevel = 1
SN.node[*].Communication.Routing.priorityLevel_1_Sources = "43"
SN.node[*].Communication.Routing.slotsIncreasePercentagePriorityLevel_1 = 0.3

[Config varyExtraSlotsPercentage_LA]
SN.node[*].Communication.Routing.slotsIncreasePercentagePriorityLevel_1 = ${ESP=0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.8, 1, 2, 4, 10}

[Config priorityLevel2_LA]
SN.node[43].Communication.Routing.myPriorityLevel = 2
SN.node[*].Communication.Routing.priorityLevel_2_Sources = "43"
SN.node[*].Communication.Routing.slotsIncreasePercentagePriorityLevel_2 = 0.1

[Config priorityLevel3_LA]
SN.node[43].Communication.Routing.myPriorityLevel = 3
